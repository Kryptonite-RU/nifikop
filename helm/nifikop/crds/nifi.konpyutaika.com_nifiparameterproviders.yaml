---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: nifiparameterproviders.nifi.konpyutaika.com
spec:
  group: nifi.konpyutaika.com
  names:
    kind: NifiParameterProvider
    listKind: NifiParameterProviderList
    plural: nifiparameterproviders
    singular: nifiparameterprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NifiParameterProvider is the Schema for the nifiparameterproviders
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NifiParameterProviderSpec defines the desired state of NifiParameterProvider
            properties:
              clusterRef:
                description: contains the reference to the NifiCluster with the one
                  the parameter context is linked.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              fileProviderConfig:
                description: configuration for a File Parameter Provider
                properties:
                  groupDirectories:
                    description: A comma-separated list of directory absolute paths
                      that will map to named parameter groups. Each directory that
                      contains files will map to a parameter group, named after the
                      innermost directory in the path. Files inside the directory
                      will map to parameter names, whose values are the content of
                      each respective file.
                    type: string
                  valueByteLimit:
                    default: 256 B
                    description: The maximum byte size of a parameter value. Since
                      parameter values are pulled from the contents of files, this
                      is a safeguard that can prevent memory issues if large files
                      are included.
                    type: string
                  valueEncoding:
                    default: base64
                    description: Indicates how parameter values are encoded inside
                      Parameter files.
                    enum:
                    - plaintext
                    - base64
                    type: string
                required:
                - groupDirectories
                type: object
              type:
                description: the Type of the Parameter Provider.
                enum:
                - AwsSecretsManager
                - Database
                - EnvironmentVariable
                - File
                - GcpSecretManager
                - HashiCorpVault
                type: string
            required:
            - type
            type: object
          status:
            description: NifiParameterProviderStatus defines the observed state of
              NifiParameterProvider
            properties:
              id:
                description: the nifi parameter provider id.
                type: string
            required:
            - id
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
