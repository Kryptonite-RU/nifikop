(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{271:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return u}));var r=t(2),i=t(6),a=(t(0),t(563)),o=["components"],c={id:"4_node",title:"Node",sidebar_label:"Node"},l={unversionedId:"5_references/1_nifi_cluster/4_node",id:"version-v0.8.0/5_references/1_nifi_cluster/4_node",isDocsHomePage:!1,title:"Node",description:"Node defines the nifi node basic configuration",source:"@site/versioned_docs/version-v0.8.0/5_references/1_nifi_cluster/4_node.md",slug:"/5_references/1_nifi_cluster/4_node",permalink:"/nifikop/docs/v0.8.0/5_references/1_nifi_cluster/4_node",editUrl:"https://github.com/konpyutaika/nifikop/edit/master/site/website/versioned_docs/version-v0.8.0/5_references/1_nifi_cluster/4_node.md",version:"v0.8.0",lastUpdatedBy:"Alexandre Guitton",lastUpdatedAt:1646600121,sidebar_label:"Node",sidebar:"version-v0.8.0/docs",previous:{title:"Node configuration",permalink:"/nifikop/docs/v0.8.0/5_references/1_nifi_cluster/3_node_config"},next:{title:"Node state",permalink:"/nifikop/docs/v0.8.0/5_references/1_nifi_cluster/5_node_state"}},d=[{value:"Node",id:"node",children:[]}],s={rightToc:d};function u(e){var n=e.components,t=Object(i.a)(e,o);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Node defines the nifi node basic configuration"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'    - id: 0\n      # nodeConfigGroup can be used to ease the node configuration, if set only the id is required\n      nodeConfigGroup: "default_group"\n      # readOnlyConfig can be used to pass Nifi node config\n      # which has type read-only these config changes will trigger rolling upgrade\n      readOnlyConfig:\n        nifiProperties:\n          overrideConfigs: |\n            nifi.ui.banner.text=NiFiKop - Node 0\n      # node configuration\n#       nodeConfig:\n    - id: 2\n      # readOnlyConfig can be used to pass Nifi node config\n      # which has type read-only these config changes will trigger rolling upgrade\n      readOnlyConfig:\n        overrideConfigs: |\n          nifi.ui.banner.text=NiFiKop - Node 2\n      # node configuration\n      nodeConfig:\n        resourcesRequirements:\n          limits:\n            cpu: "2"\n            memory: 3Gi\n          requests:\n            cpu: "1"\n            memory: 1Gi\n        storageConfigs:\n          # Name of the storage config, used to name PV to reuse into sidecars for example.\n          - name: provenance-repository\n            # Path where the volume will be mount into the main nifi container inside the pod.\n            mountPath: "/opt/nifi/provenance_repository"\n            # Kubernetes PVC spec\n            # https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolumeclaim\n            pvcSpec:\n              accessModes:\n                - ReadWriteOnce\n              storageClassName: "standard"\n              resources:\n                requests:\n                  storage: 8Gi\n')),Object(a.b)("h2",{id:"node"},"Node"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Field"),Object(a.b)("th",{parentName:"tr",align:null},"Type"),Object(a.b)("th",{parentName:"tr",align:null},"Description"),Object(a.b)("th",{parentName:"tr",align:null},"Required"),Object(a.b)("th",{parentName:"tr",align:null},"Default"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"id"),Object(a.b)("td",{parentName:"tr",align:null},"int32"),Object(a.b)("td",{parentName:"tr",align:null},"unique Node id."),Object(a.b)("td",{parentName:"tr",align:null},"Yes"),Object(a.b)("td",{parentName:"tr",align:null},"-")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"nodeConfigGroup"),Object(a.b)("td",{parentName:"tr",align:null},"string"),Object(a.b)("td",{parentName:"tr",align:null},"can be used to ease the node configuration, if set only the id is required"),Object(a.b)("td",{parentName:"tr",align:null},"No"),Object(a.b)("td",{parentName:"tr",align:null},'""')),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"readOnlyConfig"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/nifikop/docs/v0.8.0/5_references/1_nifi_cluster/2_read_only_config"},"ReadOnlyConfig")),Object(a.b)("td",{parentName:"tr",align:null},"readOnlyConfig can be used to pass Nifi node config which has type read-only these config changes will trigger rolling upgrade."),Object(a.b)("td",{parentName:"tr",align:null},"No"),Object(a.b)("td",{parentName:"tr",align:null},"nil")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"nodeConfig"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/nifikop/docs/v0.8.0/5_references/1_nifi_cluster/3_node_config"},"NodeConfig")),Object(a.b)("td",{parentName:"tr",align:null},"node configuration."),Object(a.b)("td",{parentName:"tr",align:null},"No"),Object(a.b)("td",{parentName:"tr",align:null},"nil")))))}u.isMDXComponent=!0},563:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=i.a.createContext({}),s=function(e){var n=i.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=s(e.components);return i.a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=r,f=u["".concat(o,".").concat(b)]||u[b]||p[b]||a;return t?i.a.createElement(f,c(c({ref:n},d),{},{components:t})):i.a.createElement(f,c({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var d=2;d<a;d++)o[d]=t[d];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);